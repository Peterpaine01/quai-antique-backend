# _security_logout:
#     resource: security.route_loader.logout
#     type: service

security:
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      custom_authenticators: App\Security\ApiTokenAuthenticator
      lazy: true
      provider: app_user_provider
      logout:
        path: app_api_logout
        invalidate_session: true
      stateless: true

  monolog:
    channels:
      [security]

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    # Menu
    - { path: ^/api/menu/create, roles: ROLE_ADMIN }
    - { path: ^/api/menu/show/\d+, roles: PUBLIC_ACCESS }
    - { path: ^/api/menu/list, roles: PUBLIC_ACCESS }
    - { path: ^/api/menu/edit/\d+, roles: ROLE_ADMIN }
    - { path: ^/api/menu/delete/\d+, roles: ROLE_ADMIN }

    # MenuCategory
    - { path: ^/api/menucategory/create, roles: ROLE_ADMIN }
    - { path: ^/api/menucategory/show/\d+, roles: PUBLIC_ACCESS }
    - { path: ^/api/menucategory/list, roles: PUBLIC_ACCESS }
    - { path: ^/api/menucategory/edit/\d+, roles: ROLE_ADMIN }
    - { path: ^/api/menucategory/delete/\d+, roles: ROLE_ADMIN }

    # FoodCategory
    - { path: ^/api/foodcategory/create, roles: ROLE_ADMIN }
    - { path: ^/api/foodcategory/show/\d+, roles: PUBLIC_ACCESS }
    - { path: ^/api/foodcategory/list, roles: PUBLIC_ACCESS }
    - { path: ^/api/foodcategory/edit/\d+, roles: ROLE_ADMIN }
    - { path: ^/api/foodcategory/delete/\d+, roles: ROLE_ADMIN }

    # Booking
    - { path: ^/api/booking/create, roles: ROLE_USER }
    - { path: ^/api/booking/show/\d+, roles: ROLE_USER }
    - { path: ^/api/booking/list, roles: ROLE_ADMIN }
    - { path: ^/api/booking/edit/\d+, roles: ROLE_USER }
    - { path: ^/api/booking/delete/\d+, roles: ROLE_USER }

    # Picture
    - { path: ^/api/picture/create, roles: ROLE_ADMIN }
    - { path: ^/api/picture/show/\d+, roles: PUBLIC_ACCESS }
    - { path: ^/api/picture/list, roles: PUBLIC_ACCESS }
    - { path: ^/api/picture/edit/\d+, roles: ROLE_ADMIN }
    - { path: ^/api/picture/delete/\d+, roles: ROLE_ADMIN }

    # Restaurant
    - { path: ^/api/restaurant/create, roles: ROLE_ADMIN }
    - { path: ^/api/restaurant/show/\d+, roles: PUBLIC_ACCESS }
    - { path: ^/api/restaurant/edit/\d+, roles: ROLE_ADMIN }
    - { path: ^/api/restaurant/delete/\d+, roles: ROLE_ADMIN }

    # Auth & Public
    - { path: ^/api/registration, roles: PUBLIC_ACCESS }
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/doc, roles: PUBLIC_ACCESS }

    # Users
    - { path: ^/api/user/create, roles: PUBLIC_ACCESS }
    - { path: ^/api/user/show/\d+, roles: PUBLIC_ACCESS }
    - { path: ^/api/user/list, roles: ROLE_ADMIN }
    - { path: ^/api/user/edit/\d+, roles: ROLE_USER }
    - { path: ^/api/user/delete/\d+, roles: ROLE_ADMIN }

    # Logout (optionnel)
    - { path: ^/api/logout, roles: ROLE_USER }

    # Category
    - { path: ^/api/category/create, roles: PUBLIC_ADMIN }
    - { path: ^/api/category/show/\d+, roles: PUBLIC_ACCESS }
    - { path: ^/api/category/list, roles: ROLE_ADMIN }
    - { path: ^/api/category/edit/\d+, roles: ROLE_ADMIN }
    - { path: ^/api/category/delete/\d+, roles: ROLE_ADMIN }

    # Food
    - { path: ^/api/food/create, roles: PUBLIC_ADMIN }
    - { path: ^/api/food/show/\d+, roles: PUBLIC_ACCESS }
    - { path: ^/api/food/list, roles: ROLE_ADMIN }
    - { path: ^/api/food/edit/\d+, roles: ROLE_ADMIN }
    - { path: ^/api/food/delete/\d+, roles: ROLE_ADMIN }

  role_hierarchy:
    ROLE_ADMIN: [ROLE_USER]
